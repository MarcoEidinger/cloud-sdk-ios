{"formatVersion":"1.0","generatedAt":"2021-12-21T00:05:49Z","generatedBy":{"name":"SAP"},"name":"SAP BTP SDK for iOS Swift Packages","overview":"Swift Packages provided by the SAP BTP SDK for iOS","packages":[{"keywords":["fiori","open-source","sap","swift","swiftui"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios-fiori/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios-fiori/main/README.md","summary":"SwiftUI implementation of the SAP Fiori for iOS Design Language.","url":"https://github.com/SAP/cloud-sdk-ios-fiori.git","versions":[{"defaultToolsVersion":"5.3.0","manifests":{"5.3.0":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"FioriSwiftUI","products":[{"name":"FioriSwiftUI","targets":["FioriSwiftUI"],"type":{"library":["dynamic"]}},{"name":"FioriCharts","targets":["FioriCharts"],"type":{"library":["dynamic"]}},{"name":"FioriIntegrationCards","targets":["FioriIntegrationCards"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"FioriSwiftUI","name":"FioriSwiftUI"},{"moduleName":"FioriIntegrationCards","name":"FioriIntegrationCards"},{"moduleName":"FioriCharts","name":"FioriCharts"}],"toolsVersion":"5.3.0"}},"summary":"chore(release): 2.0.1","version":"2.0.1"},{"defaultToolsVersion":"5.3.0","manifests":{"5.3.0":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"FioriSwiftUI","products":[{"name":"FioriSwiftUI","targets":["FioriSwiftUI"],"type":{"library":["dynamic"]}},{"name":"FioriCharts","targets":["FioriCharts"],"type":{"library":["dynamic"]}},{"name":"FioriIntegrationCards","targets":["FioriIntegrationCards"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"FioriSwiftUI","name":"FioriSwiftUI"},{"moduleName":"FioriIntegrationCards","name":"FioriIntegrationCards"},{"moduleName":"FioriCharts","name":"FioriCharts"}],"toolsVersion":"5.3.0"}},"version":"2.0.0"},{"defaultToolsVersion":"5.3.0","manifests":{"5.3.0":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FioriSwiftUI","products":[{"name":"FioriSwiftUI","targets":["FioriSwiftUI"],"type":{"library":["dynamic"]}},{"name":"FioriCharts","targets":["FioriCharts"],"type":{"library":["dynamic"]}},{"name":"FioriIntegrationCards","targets":["FioriIntegrationCards"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"FioriSwiftUI","name":"FioriSwiftUI"},{"moduleName":"FioriIntegrationCards","name":"FioriIntegrationCards"},{"moduleName":"FioriCharts","name":"FioriCharts"}],"toolsVersion":"5.3.0"}},"summary":"chore(release): 1.0.3","version":"1.0.3"},{"defaultToolsVersion":"5.3.0","manifests":{"5.3.0":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FioriSwiftUI","products":[{"name":"FioriSwiftUI","targets":["FioriSwiftUI"],"type":{"library":["dynamic"]}},{"name":"FioriCharts","targets":["FioriCharts"],"type":{"library":["dynamic"]}},{"name":"FioriIntegrationCards","targets":["FioriIntegrationCards"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"FioriSwiftUI","name":"FioriSwiftUI"},{"moduleName":"FioriIntegrationCards","name":"FioriIntegrationCards"},{"moduleName":"FioriCharts","name":"FioriCharts"}],"toolsVersion":"5.3.0"}},"summary":"chore(release): 1.0.2","version":"1.0.2"},{"defaultToolsVersion":"5.3.0","manifests":{"5.3.0":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FioriSwiftUI","products":[{"name":"FioriSwiftUI","targets":["FioriSwiftUI"],"type":{"library":["dynamic"]}},{"name":"FioriCharts","targets":["FioriCharts"],"type":{"library":["dynamic"]}},{"name":"FioriIntegrationCards","targets":["FioriIntegrationCards"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"FioriSwiftUI","name":"FioriSwiftUI"},{"moduleName":"FioriIntegrationCards","name":"FioriIntegrationCards"},{"moduleName":"FioriCharts","name":"FioriCharts"}],"toolsVersion":"5.3.0"}},"summary":"chore(release): 1.0.1","version":"1.0.1"}]},{"keywords":["arkit","opensource","realitycomposer","realitykit","swift","swiftui"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios-fiori-ar/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios-fiori-ar/main/README.md","summary":"SAP Fiori for iOS AR","url":"https://github.com/SAP/cloud-sdk-ios-fiori-ar.git","versions":[{"defaultToolsVersion":"5.5.0","manifests":{"5.5.0":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"FioriAR","products":[{"name":"FioriAR","targets":["FioriAR-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"FioriAR-requiresToEmbedXCFrameworks","targets":["FioriAR-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FioriAR_withBinaryDependencies","name":"FioriAR-withBinaryDependencies"},{"moduleName":"FioriAR_withoutBinaryDependencies","name":"FioriAR-withoutBinaryDependencies"}],"toolsVersion":"5.5.0"}},"version":"2.0.0"},{"defaultToolsVersion":"5.3.0","manifests":{"5.3.0":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"FioriARKit","products":[{"name":"FioriARKit","targets":["FioriARKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FioriARKit","name":"FioriARKit"}],"toolsVersion":"5.3.0"}},"version":"1.1.0"},{"defaultToolsVersion":"5.3.0","manifests":{"5.3.0":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"FioriARKit","products":[{"name":"FioriARKit","targets":["FioriARKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FioriARKit","name":"FioriARKit"}],"toolsVersion":"5.3.0"}},"version":"1.0.0"}]},{"keywords":["cai","chatbot","open-source","sap","swift","swiftui"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios-cai/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios-cai/main/README.md","summary":"Swift package as module for interfacing with SAP Conversational AI in native iOS apps. ","url":"https://github.com/SAP/cloud-sdk-ios-cai.git","versions":[{"defaultToolsVersion":"5.3.0","manifests":{"5.3.0":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"SAPCAI","products":[{"name":"SAPCAI","targets":["SAPCAI-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"SAPCAI-requiresToEmbedXCFrameworks","targets":["SAPCAI-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SAPCAI_withBinaryDependencies","name":"SAPCAI-withBinaryDependencies"},{"moduleName":"SAPCAI_withoutBinaryDependencies","name":"SAPCAI-withoutBinaryDependencies"}],"toolsVersion":"5.3.0"}},"version":"2.0.0"},{"defaultToolsVersion":"5.3.0","manifests":{"5.3.0":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"SAPCAI","products":[{"name":"SAPCAI","targets":["SAPCAI-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"SAPCAI-requiresToEmbedXCFrameworks","targets":["SAPCAI-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SAPCAI_withBinaryDependencies","name":"SAPCAI-withBinaryDependencies"},{"moduleName":"SAPCAI_withoutBinaryDependencies","name":"SAPCAI-withoutBinaryDependencies"}],"toolsVersion":"5.3.0"}},"version":"1.0.4"},{"defaultToolsVersion":"5.3.0","manifests":{"5.3.0":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"SAPCAI","products":[{"name":"SAPCAI","targets":["SAPCAI-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"SAPCAI-requiresToEmbedXCFrameworks","targets":["SAPCAI-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SAPCAI_withBinaryDependencies","name":"SAPCAI-withBinaryDependencies"},{"moduleName":"SAPCAI_withoutBinaryDependencies","name":"SAPCAI-withoutBinaryDependencies"}],"toolsVersion":"5.3.0"}},"version":"1.0.3"},{"defaultToolsVersion":"5.3.0","manifests":{"5.3.0":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"SAPCAI","products":[{"name":"SAPCAI","targets":["SAPCAI-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"SAPCAI-requiresToEmbedXCFrameworks","targets":["SAPCAI-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SAPCAI_withBinaryDependencies","name":"SAPCAI-withBinaryDependencies"},{"moduleName":"SAPCAI_withoutBinaryDependencies","name":"SAPCAI-withoutBinaryDependencies"}],"toolsVersion":"5.3.0"}},"version":"1.0.2"}]}],"signature":{"certificate":{"issuer":{"commonName":"Apple Worldwide Developer Relations Certification Authority","organization":"Apple Inc.","organizationalUnit":"G3"},"subject":{"commonName":"Swift Package Collection: SAP SE","organization":"SAP SE","organizationalUnit":"4FE7U4H495","userID":"4FE7U4H495"}},"signature":"ewogICJhbGciIDogIlJTMjU2IiwKICAieDVjIiA6IFsKICAgICJNSUlGYkRDQ0JGU2dBd0lCQWdJUVRDZ1BVbGRWWjZ5Y0Exc1dNODFnV0RBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSXhNVEl4T0RJek1UYzFORm9YRFRJeU1USXhPREl6TVRjMU0xb3dlakVhTUJnR0NnbVNKb21UOGl4a0FRRU1DalJHUlRkVk5FZzBPVFV4S1RBbkJnTlZCQU1NSUZOM2FXWjBJRkJoWTJ0aFoyVWdRMjlzYkdWamRHbHZiam9nVTBGUUlGTkZNUk13RVFZRFZRUUxEQW8wUmtVM1ZUUklORGsxTVE4d0RRWURWUVFLREFaVFFWQWdVMFV4Q3pBSkJnTlZCQVlUQWtSRk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNDVSMGNuWDhTUDEraFhsV2tPUGk0Zkp5M01vMzE5akRKeHo5a3IzZ3VUS0tua1NyUHY0eisyUU91cmVlam5NUWpIdWJpSmIvZ0hSWllKcmZLWWVJYVhvdTI3a3krL2duaGZ0cjlrNEVEaFkwbGMzdUppS3FHV2F6dmVVd1lWUWpmeWt4YTYvQUtEc20wSWg1UmtQakg0QnRUZzRWL0hkMDh3ZDlXcEJxODVRVUNtYzNiSDZYSzVzY1liRWE5eGxrdXVHRGd0OHlGS0YxQlNkS08wSHpScS9nTjVmR0NLdW1iYXM4THN6OUdlU1E2M0xHR1ExTElCN2E0V2hFdXZaQ3U1TW9SbWprTFVrY0E3ek5nTU1jd0Z3bDl5ZnFOTUU2YzNQeW1HZ3F5NmhWNG0yM0JZQnI2ZzBMQVdzTVM5UWVDZm5KYXhzR3BQWTlXRWRIbHk5enl3SURBUUFCbzRJQjhUQ0NBZTB3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFKL3NBVmtQbXZaQXFTRXJrbUtHTU1sK3luc2pCQkJnZ3JCZ0VGQlFjQkFRUTFNRE13TVFZSUt3WUJCUVVITUFHR0pXaDBkSEE2THk5dlkzTndMbUZ3Y0d4bExtTnZiUzl2WTNOd01ETXRkM2RrY21jek1Ua3dnZ0VlQmdOVkhTQUVnZ0VWTUlJQkVUQ0NBUTBHQ1NxR1NJYjNZMlFGQVRDQi96Q0J3d1lJS3dZQkJRVUhBZ0l3Z2JZTWdiTlNaV3hwWVc1alpTQnZiaUIwYUdseklHTmxjblJwWm1sallYUmxJR0o1SUdGdWVTQndZWEowZVNCaGMzTjFiV1Z6SUdGalkyVndkR0Z1WTJVZ2IyWWdkR2hsSUhSb1pXNGdZWEJ3YkdsallXSnNaU0J6ZEdGdVpHRnlaQ0IwWlhKdGN5QmhibVFnWTI5dVpHbDBhVzl1Y3lCdlppQjFjMlVzSUdObGNuUnBabWxqWVhSbElIQnZiR2xqZVNCaGJtUWdZMlZ5ZEdsbWFXTmhkR2x2YmlCd2NtRmpkR2xqWlNCemRHRjBaVzFsYm5SekxqQTNCZ2dyQmdFRkJRY0NBUllyYUhSMGNITTZMeTkzZDNjdVlYQndiR1V1WTI5dEwyTmxjblJwWm1sallYUmxZWFYwYUc5eWFYUjVMekFXQmdOVkhTVUJBZjhFRERBS0JnZ3JCZ0VGQlFjREF6QWRCZ05WSFE0RUZnUVVkdjBLdnp0RzRqZnZJNUVwQ2x4bDNiazZ6ejB3RGdZRFZSMFBBUUgvQkFRREFnZUFNQkFHQ2lxR1NJYjNZMlFHQVNNRUFnVUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJFQXVlSUswRkJCbGJRTHpmL2gzSGM3WndINjkwVXFxeGR2SEU1M1pWNkZpalczSU1ERHVBR2xJWnIzS0pvQW5IZWZnNHpxZXNmV3RZMkhmSGk3WUdVVjdkSDFOWlp3UHpkTUl0UDRPUlRXczczZUwyTGo2MVJQRTFUM0pkYk1JNkhDV0U5SFhFSU1XdGdLRTRucW5hN3hLYWg5OWw4VWFQZ1NkSmkzTS90VHRDcTNleXJwd0dPV0ZZS0pDZnVRL29CZzVKcHBmdkoxUWE2akRvOEx4WmJrU0NLS3dSNEFtb29IR2FHU3FPWTFPUDBGTDBhMnhtYzdsalhYc3M2MXlHamZYUDE0R0IzL3BLdDlPUWNEK3pJTTRHbnFwNUM2K1ZCMENsQVpkTzZKbG1JUVRKWlpVY1JUSTlZcTRmdVB4ZnpWd3p4NlkyMlVFa0o5eXYzTHJIVSIKICBdCn0..f9Vcfa6Z0hTXpjnXSBp7etuhije0_n8HKFRgjVXZHialU4Jp8F_Ru4oslwicmBP8d2rAdD_kH_XmHIejfyOVO6Vfijk9ZPDxzvi2In3JPKvf9B04wkgtDAhh--uUU_cXDYGEIhKQ9lGWzlAI1r3ZfAQGN78LVxqfjU9WWkqutlvO-3YL0diNZSTIBNQImV72hvmglUesBOuo94uJSfJ2D7uaDdvMYbJOJkAH5OgjbVhhdR81rPbcm1vh6YA6q2R7Q3dYqxEUR1aeKJYnyo3GZ5lAdTOFG5pySWOhGsVoxs-j3wSQGvQBLTGjq_wWm9hSmUhV3mgqznkzfJ13WDUUfw"}}